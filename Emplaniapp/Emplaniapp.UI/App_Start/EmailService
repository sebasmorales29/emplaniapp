using Microsoft.AspNet.Identity;
using System.Diagnostics;
using System.Net.Http;
using System.Text;
using System.Threading.Tasks;
using Newtonsoft.Json;

public class EmailService : IIdentityMessageService
{
    // ✅ Tu nueva API Key de Brevo (NO SMTP)
    private const string ApiKey = "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";
    private const string FromEmail = "kkaiserking@gmail.com";
    private const string FromName = "Emplaniapp";

    public async Task SendAsync(IdentityMessage message)
    {
        using (var client = new HttpClient())
        {
            client.DefaultRequestHeaders.Add("api-key", ApiKey);

            var payload = new
            {
                sender = new { name = FromName, email = FromEmail },
                to = new[] { new { email = message.Destination } },
                subject = message.Subject,
                htmlContent = message.Body
            };

            var content = new StringContent(JsonConvert.SerializeObject(payload), Encoding.UTF8, "application/json");

            try
            {
                var response = await client.PostAsync("https://api.brevo.com/v3/smtp/email", content);
                var result = await response.Content.ReadAsStringAsync();

                if (!response.IsSuccessStatusCode)
                {
                    Debug.WriteLine($"❌ Error HTTP ({response.StatusCode}): {result}");
                    throw new HttpRequestException($"Error al enviar correo: {response.StatusCode} - {result}");
                }

                Debug.WriteLine($"✅ Correo enviado exitosamente a {message.Destination}");
            }
            catch (HttpRequestException ex)
            {
                Debug.WriteLine("❌ ERROR HTTP al enviar el correo: " + ex.Message);
                throw;
            }
            catch (System.Exception ex)
            {
                Debug.WriteLine("❌ ERROR GENERAL al enviar el correo: " + ex.Message);
                throw;
            }
        }
    }
}
