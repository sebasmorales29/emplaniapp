@using Emplaniapp.Abstracciones.ModelosParaUI
@model Tuple<EmpleadoDto, List<RetencionDto>>

@{
    var emp = Model.Item1;
    ViewBag.Title = $"Retenciones – {emp.nombre} {emp.primerApellido}";
}

<link rel="stylesheet" href="~/Content/EstilosDatos.css" />

<div class="container">
    @Html.ActionLink(
        "< Volver a Hoja Resumen",
        "listarHojaResumen", "HojaResumen",
        new { id = emp.idEmpleado },
        new { @class = "btn btn-outline-secondary mb-3", @escape = false }
    )

    <h2 class="mb-4">Retenciones de @emp.nombre @emp.primerApellido</h2>

    <button id="btnAbrirCrearRetencion"
            class="btn btn-primary mb-4"
            data-emp="@emp.idEmpleado">
        <i class="fa fa-plus"></i> Agregar Retención
    </button>

    <div id="contenedorLista" class="row">
        @if (Model.Item2.Any())
        {
            foreach (var item in Model.Item2)
            {
                <div class="col-md-6 col-lg-4 mb-4">
                    <div class="card h-100">
                        <div class="card-body">
                            <h5 class="card-title">@item.nombreTipoRetencio</h5>
                            <h6 class="card-subtitle text-muted">
                                @item.fechaRetencio:dd/MM/yyyy
                            </h6>
                            <hr />
                            <p><strong>Rebajo:</strong> @item.rebajo.ToString("C2")</p>
                            <p>
                                <strong>Estado:</strong>
                                <span class="badge @(item.nombreEstado=="Activo"?"badge-success":"badge-secondary")">
                                    @item.nombreEstado
                                </span>
                            </p>
                        </div>
                        <div class="card-footer bg-transparent border-top-0">
                            <a href="javascript:;"
                               class="btn btn-primary btn-sm btn-editar-retencion"
                               data-id="@item.idRetencion">
                                Editar
                            </a>
                            <a href="javascript:;"
                               class="btn btn-danger btn-sm btn-eliminar-retencion"
                               data-id="@item.idRetencion">
                                Eliminar
                            </a>
                        </div>
                    </div>
                </div>
            }
        }
        else
        {
            <div class="col-12">
                <div class="alert alert-info">No hay retenciones registradas.</div>
            </div>
        }
    </div>
</div>

@* Modal Create *@
<div class="modal fade" id="modalCrearRetencion" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content" id="modal-body-retencion"></div>
    </div>
</div>

@* Modal Edit *@
<div class="modal fade" id="modalEditarRetencion" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content" id="modal-body-editar"></div>
    </div>
</div>

@* Modal Delete *@
<div class="modal fade" id="modalEliminarRetencion" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content" id="modal-body-eliminar"></div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
    @Scripts.Render("~/bundles/jqueryval")

    <script>
    $(function() {
        const empId   = @Model.Item1.idEmpleado;
        const urlC    = '@Url.Action("Create","Retenciones")';
        const urlE    = '@Url.Action("Edit","Retenciones")';
        const urlD    = '@Url.Action("Delete","Retenciones")';
        const urlList = '@Url.Action("Lista","Retenciones")';

        // Inicializa cálculo en modales Create/Edit
        function initRetModal(container) {
            const $c    = $(container);
            const $sal  = $c.find('#SalarioBase');
            const $ddl  = $c.find('#ddlTipo');
            const $pctH = $c.find('#txtPorcentaje');
            const $pctD = $c.find('#pctDisplay');
            const $mtoH = $c.find('#txtMonto');
            const $mtoD = $c.find('#mtoDisplay');

            function recalcular() {
                let baseText = $sal.val().replace(/\./g,'').replace(',', '.');
                let base = parseFloat(baseText) || 0;

                let texto = $ddl.find('option:selected').text();
                let m     = texto.match(/\((\d+([.,]\d+)?)%\)/);
                let p     = m ? parseFloat(m[1].replace(',', '.')) : 0;

                let pForm = p.toFixed(2).replace('.', ',');
                $pctH.val(pForm);
                $pctD.val(pForm);

                let monto = base * p / 100;
                let mForm = monto.toFixed(2).replace('.', ',');
                $mtoH.val(mForm);
                $mtoD.val(mForm);
            }

            $ddl.off('change').on('change', recalcular);
            recalcular();
        }

        // ABRIR Create
        $('#btnAbrirCrearRetencion').click(function() {
            $('#modal-body-retencion')
              .load(urlC + '?idEmpleado=' + empId, () => {
                  $('#modalCrearRetencion').modal('show');
                  initRetModal('#modal-body-retencion');
              });
        });

        // ABRIR Edit
        $(document).on('click', '.btn-editar-retencion', function() {
            const id = $(this).data('id');
            $('#modal-body-editar')
              .load(urlE + '?id=' + id, () => {
                  $('#modalEditarRetencion').modal('show');
                  initRetModal('#modal-body-editar');
              });
        });

        // ABRIR Delete
        $(document).on('click', '.btn-eliminar-retencion', function() {
            const id = $(this).data('id');
            $('#modal-body-eliminar')
              .load(urlD + '?id=' + id, () => {
                  $('#modalEliminarRetencion').modal('show');
              });
        });

        // AJAX Create
        $(document).on('submit', '#formCrearRetencion', function(e) {
            e.preventDefault();
            const f = $(this);
            $.post(f.attr('action'), f.serialize(), res => {
                if (res.success) {
                    $('#modalCrearRetencion').modal('hide');
                    $('#contenedorLista').load(`${urlList}?idEmpleado=${empId}`);
                } else {
                    mostrarErrores(res.errors, f);
                }
            }, 'json');
        });

        // AJAX Edit
        $(document).on('submit', '#formEditarRetencion', function(e) {
            e.preventDefault();
            const f = $(this);
            $.post(f.attr('action'), f.serialize(), res => {
                if (res.success) {
                    $('#modalEditarRetencion').modal('hide');
                    $('#contenedorLista').load(`${urlList}?idEmpleado=${empId}`);
                } else {
                    mostrarErrores(res.errors, f);
                }
            }, 'json');
        });

        // AJAX Delete
        $(document).on('submit', '#formEliminarRetencion', function(e) {
            e.preventDefault();
            const f = $(this);
            $.post(f.attr('action'), f.serialize(), res => {
                if (res.success) {
                    $('#modalEliminarRetencion').modal('hide');
                    $('#contenedorLista').load(`${urlList}?idEmpleado=${empId}`);
                }
            }, 'json');
        });

        // CERRAR MODALES
        $(document).on('click', '[data-dismiss="modal"]', function() {
            $(this).closest('.modal').modal('hide');
        });

        // Mostrar errores
        function mostrarErrores(errors, form) {
            let html = '<div class="alert alert-danger validation-summary"><ul>';
            errors.forEach(e => html += `<li>${e}</li>`);
            html += '</ul></div>';
            form.find('.validation-summary').remove();
            form.prepend(html);
        }
    });
    </script>
}
