@model Emplaniapp.Abstracciones.ModelosParaUI.EmpleadoDto

@{
    ViewBag.Title = "Editar Datos Personales";
}

<h2>Editar Datos Personales de @Model.nombre @Model.primerApellido</h2>

@using (Html.BeginForm("ActualizarDatosPersonales", "DatosPersonales", FormMethod.Post, new { id = "editForm" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.idEmpleado)
    
    @* Campos laborales ocultos - no se editan aquí pero son requeridos para validación *@
    @Html.HiddenFor(model => model.idCargo)
    @Html.HiddenFor(model => model.fechaContratacion)
    @Html.HiddenFor(model => model.fechaSalida)
    
    @* Campos financieros ocultos - no se editan aquí pero son requeridos para validación *@
    @Html.HiddenFor(model => model.periocidadPago)
    @Html.HiddenFor(model => model.idMoneda)
    @Html.HiddenFor(model => model.cuentaIBAN)
    @Html.HiddenFor(model => model.idBanco)
    @Html.HiddenFor(model => model.salarioAprobado)
    @Html.HiddenFor(model => model.salarioDiario)

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.nombre, "Nombre", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.nombre, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.nombre, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.segundoNombre, "Segundo Nombre", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.segundoNombre, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.segundoNombre, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.primerApellido, "Primer Apellido", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.primerApellido, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.primerApellido, "", new { @class = "text-danger" })
            </div>
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.segundoApellido, "Segundo Apellido", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.segundoApellido, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.segundoApellido, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.fechaNacimiento, "Fecha de Nacimiento", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.fechaNacimiento, "{0:yyyy-MM-dd}", new { @class = "form-control", @type = "date" })
                @Html.ValidationMessageFor(model => model.fechaNacimiento, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.cedula, "Cédula", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.cedula, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.cedula, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.numeroTelefonico, "Teléfono", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.numeroTelefonico, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.numeroTelefonico, "", new { @class = "text-danger" })
            </div>
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.correoInstitucional, "Correo Electrónico", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.correoInstitucional, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.correoInstitucional, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group" style="margin-top: 20px;">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Guardar Cambios" class="btn btn-success" />
                @Html.ActionLink("Cancelar", "Detalles", new { id = Model.idEmpleado }, new { @class = "btn btn-default" })
            </div>
        </div>
    </div>
}

<!-- Renderiza el modal de confirmación -->
@Html.Partial("_AdminPasswordModal")

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(document).ready(function () {
            var mainForm = $('#editForm');

            mainForm.on('submit', function (e) {
                console.log('Formulario interceptado, mostrando modal de contraseña...');
                // Prevenir el envío automático del formulario
                e.preventDefault();
                
                // Limpiar errores previos y mostrar el modal
                $('#adminPasswordInput').val('');
                $('#adminPasswordError').hide().text('');
                $('#adminPasswordModal').modal('show');
            });

            $('#confirmAdminPasswordBtn').on('click', function () {
                var password = $('#adminPasswordInput').val();
                var errorDiv = $('#adminPasswordError');
                // Obtener el token del formulario principal
                var token = mainForm.find('input[name="__RequestVerificationToken"]').val();

                if (!password) {
                    errorDiv.text('La contraseña no puede estar vacía.').show();
                    return;
                }

                // Llamada AJAX para validar la contraseña
                console.log('Validando contraseña del administrador...');
                $.ajax({
                    url: '@Url.Action("ValidateAdminPassword", "DatosPersonales")',
                    method: 'POST',
                    data: {
                        __RequestVerificationToken: token,
                        password: password
                    },
                    success: function (response) {
                        console.log('Respuesta del servidor:', response);
                        if (response.success) {
                            console.log('Contraseña correcta, enviando formulario...');
                            // Si la contraseña es correcta, oculta el modal y envía el formulario principal
                            $('#adminPasswordModal').modal('hide');
                            mainForm.off('submit').submit(); // Desactiva el interceptor y envía
                        } else {
                            console.log('Contraseña incorrecta:', response.message);
                            // Si es incorrecta, muestra el error
                            errorDiv.text(response.message).show();
                        }
                    },
                    error: function (xhr, status, error) {
                        console.log('Error en AJAX:', status, error);
                        // Error de comunicación
                        errorDiv.text('Error de comunicación con el servidor.').show();
                    }
                });
            });
        });
    </script>
} 