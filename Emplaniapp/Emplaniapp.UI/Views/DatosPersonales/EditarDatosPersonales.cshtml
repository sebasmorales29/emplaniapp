@model Emplaniapp.Abstracciones.ModelosParaUI.EmpleadoDto

@{
    ViewBag.Title = "Editar Datos Personales";
}

<h2>Editar Datos Personales de @Model.nombre @Model.primerApellido</h2>

@using (Html.BeginForm("ActualizarDatosPersonales", "DatosPersonales", FormMethod.Post, new { id = "editForm" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.idEmpleado)
    
    @* Campos laborales ocultos - no se editan aquí pero son requeridos para validación *@
    @Html.HiddenFor(model => model.idCargo)
    @Html.HiddenFor(model => model.fechaContratacion)
    @Html.HiddenFor(model => model.fechaSalida)
    
    @* Campos financieros ocultos - no se editan aquí pero son requeridos para validación *@
    @Html.HiddenFor(model => model.periocidadPago)
    @Html.HiddenFor(model => model.idMoneda)
    @Html.HiddenFor(model => model.cuentaIBAN)
    @Html.HiddenFor(model => model.idBanco)
    @Html.HiddenFor(model => model.salarioAprobado)
    @Html.HiddenFor(model => model.salarioDiario)

    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <!-- LAYOUT DE DOS COLUMNAS -->
    <div class="row">
        <!-- COLUMNA IZQUIERDA: DATOS PERSONALES -->
        <div class="col-md-6">
            <div class="panel panel-primary">
                <div class="panel-heading">
                    <h3 class="panel-title">Información Personal</h3>
                </div>
                <div class="panel-body">
                    <div class="form-group">
                        @Html.LabelFor(model => model.nombre, "Nombre", htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.nombre, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.nombre, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.segundoNombre, "Segundo Nombre", htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.segundoNombre, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.segundoNombre, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.primerApellido, "Primer Apellido", htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.primerApellido, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.primerApellido, "", new { @class = "text-danger" })
                    </div>
                    
                    <div class="form-group">
                        @Html.LabelFor(model => model.segundoApellido, "Segundo Apellido", htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.segundoApellido, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.segundoApellido, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.fechaNacimiento, "Fecha de Nacimiento", htmlAttributes: new { @class = "control-label" })
                        @Html.TextBoxFor(model => model.fechaNacimiento, "{0:yyyy-MM-dd}", new { @class = "form-control", @type = "date" })
                        @Html.ValidationMessageFor(model => model.fechaNacimiento, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.cedula, "Cédula", htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.cedula, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.cedula, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.numeroTelefonico, "Teléfono", htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.numeroTelefonico, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.numeroTelefonico, "", new { @class = "text-danger" })
                    </div>
                    
                    <div class="form-group">
                        @Html.LabelFor(model => model.correoInstitucional, "Correo Electrónico", htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.correoInstitucional, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.correoInstitucional, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>

        <!-- COLUMNA DERECHA: DIRECCIÓN -->
        <div class="col-md-6">
            <div class="panel panel-warning">
                <div class="panel-heading">
                    <h3 class="panel-title">Dirección</h3>
                </div>
                <div class="panel-body">
                    <div class="form-group">
                        @Html.LabelFor(model => model.idProvincia, "Provincia", htmlAttributes: new { @class = "control-label" })
                        @Html.DropDownListFor(model => model.idProvincia, (SelectList)ViewBag.Provincias, "-- Seleccione provincia --", new { @class = "form-control", id = "ddlProvincia" })
                        @Html.ValidationMessageFor(model => model.idProvincia, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.idCanton, "Cantón", htmlAttributes: new { @class = "control-label" })
                        @Html.DropDownListFor(model => model.idCanton, (SelectList)ViewBag.Cantones, "-- Seleccione cantón --", new { @class = "form-control", id = "ddlCanton" })
                        @Html.ValidationMessageFor(model => model.idCanton, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.idDistrito, "Distrito", htmlAttributes: new { @class = "control-label" })
                        @Html.DropDownListFor(model => model.idDistrito, (SelectList)ViewBag.Distritos, "-- Seleccione distrito --", new { @class = "form-control", id = "ddlDistrito" })
                        @Html.ValidationMessageFor(model => model.idDistrito, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.idCalle, "Calle", htmlAttributes: new { @class = "control-label" })
                        @Html.DropDownListFor(model => model.idCalle, (SelectList)ViewBag.Calles, "-- Seleccione calle --", new { @class = "form-control", id = "ddlCalle" })
                        @Html.ValidationMessageFor(model => model.idCalle, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.direccionDetallada, "Dirección Detallada", htmlAttributes: new { @class = "control-label" })
                        @Html.TextAreaFor(model => model.direccionDetallada, new { @class = "form-control", rows = "4", placeholder = "Detalle específico de la dirección (casa #, apartamento, referencias, etc.)" })
                        @Html.ValidationMessageFor(model => model.direccionDetallada, "", new { @class = "text-danger" })
                    </div>

                    <!-- VISTA PREVIA DE DIRECCIÓN COMPLETA -->
                    <div class="alert alert-info" style="margin-top: 15px;">
                        <strong>Vista Previa:</strong>
                        <div id="preview-direccion">
                            <em>Seleccione la ubicación para ver la dirección completa</em>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- BOTONES DE ACCIÓN CENTRADOS -->
    <div class="row" style="margin-top: 20px;">
        <div class="col-md-12 text-center">
            <input type="submit" value="Guardar Cambios" class="btn btn-success btn-lg" />
            @Html.ActionLink("Cancelar", "Detalles", new { id = Model.idEmpleado }, new { @class = "btn btn-default btn-lg" })
        </div>
    </div>
}

<!-- Renderiza el modal de confirmación -->
@Html.Partial("_AdminPasswordModal")

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(document).ready(function () {
            var mainForm = $('#editForm');

            // ==============================================
            // LÓGICA PARA DROPDOWNS DE DIRECCIÓN EN CASCADA
            // ==============================================
            
            // Cargar cantones al cargar la página si hay provincia seleccionada
            var provinciaId = $('#ddlProvincia').val();
            if (provinciaId) {
                cargarCantones(provinciaId, '@Model.idCanton');
            }

            // Cargar distritos si hay cantón seleccionado
            var cantonId = $('#ddlCanton').val();
            if (cantonId) {
                cargarDistritos(cantonId, '@Model.idDistrito');
            }

            // Cargar calles si hay distrito seleccionado
            var distritoId = $('#ddlDistrito').val();
            if (distritoId) {
                cargarCalles(distritoId, '@Model.idCalle');
            }

            // Actualizar vista previa al cargar
            actualizarVistaPrevia();

            // EVENTOS DE CAMBIO EN DROPDOWNS
            $('#ddlProvincia').change(function () {
                var provinciaId = $(this).val();
                if (provinciaId) {
                    cargarCantones(provinciaId);
                } else {
                    resetearDropdowns(['#ddlCanton', '#ddlDistrito', '#ddlCalle']);
                }
                actualizarVistaPrevia();
            });

            $('#ddlCanton').change(function () {
                var cantonId = $(this).val();
                if (cantonId) {
                    cargarDistritos(cantonId);
                } else {
                    resetearDropdowns(['#ddlDistrito', '#ddlCalle']);
                }
                actualizarVistaPrevia();
            });

            $('#ddlDistrito').change(function () {
                var distritoId = $(this).val();
                if (distritoId) {
                    cargarCalles(distritoId);
                } else {
                    resetearDropdowns(['#ddlCalle']);
                }
                actualizarVistaPrevia();
            });

            $('#ddlCalle').change(function () {
                actualizarVistaPrevia();
            });

            // Actualizar vista previa cuando cambie dirección detallada
            $('#direccionDetallada').on('input', function () {
                actualizarVistaPrevia();
            });

            // FUNCIONES AUXILIARES PARA DROPDOWNS
            function cargarCantones(provinciaId, selectedCantonId) {
                $.ajax({
                    url: '@Url.Action("ObtenerCantonesPorProvincia", "DatosPersonales")',
                    type: 'GET',
                    data: { idProvincia: provinciaId },
                    success: function (data) {
                        var cantonDropdown = $('#ddlCanton');
                        cantonDropdown.empty().append('<option value="">-- Seleccione cantón --</option>');
                        
                        $.each(data, function (index, item) {
                            var option = $('<option></option>').val(item.value).text(item.text);
                            if (selectedCantonId && item.value == selectedCantonId) {
                                option.prop('selected', true);
                            }
                            cantonDropdown.append(option);
                        });

                        // Si hay cantón seleccionado, cargar distritos
                        if (selectedCantonId) {
                            cargarDistritos(selectedCantonId, '@Model.idDistrito');
                        } else {
                            resetearDropdowns(['#ddlDistrito', '#ddlCalle']);
                        }
                    },
                    error: function () {
                        console.error('Error al cargar cantones');
                        resetearDropdowns(['#ddlCanton', '#ddlDistrito', '#ddlCalle']);
                    }
                });
            }

            function cargarDistritos(cantonId, selectedDistritoId) {
                $.ajax({
                    url: '@Url.Action("ObtenerDistritosPorCanton", "DatosPersonales")',
                    type: 'GET',
                    data: { idCanton: cantonId },
                    success: function (data) {
                        var distritoDropdown = $('#ddlDistrito');
                        distritoDropdown.empty().append('<option value="">-- Seleccione distrito --</option>');
                        
                        $.each(data, function (index, item) {
                            var option = $('<option></option>').val(item.value).text(item.text);
                            if (selectedDistritoId && item.value == selectedDistritoId) {
                                option.prop('selected', true);
                            }
                            distritoDropdown.append(option);
                        });

                        // Si hay distrito seleccionado, cargar calles
                        if (selectedDistritoId) {
                            cargarCalles(selectedDistritoId, '@Model.idCalle');
                        } else {
                            resetearDropdowns(['#ddlCalle']);
                        }
                    },
                    error: function () {
                        console.error('Error al cargar distritos');
                        resetearDropdowns(['#ddlDistrito', '#ddlCalle']);
                    }
                });
            }

            function cargarCalles(distritoId, selectedCalleId) {
                $.ajax({
                    url: '@Url.Action("ObtenerCallesPorDistrito", "DatosPersonales")',
                    type: 'GET',
                    data: { idDistrito: distritoId },
                    success: function (data) {
                        var calleDropdown = $('#ddlCalle');
                        calleDropdown.empty().append('<option value="">-- Seleccione calle --</option>');
                        
                        $.each(data, function (index, item) {
                            var option = $('<option></option>').val(item.value).text(item.text);
                            if (selectedCalleId && item.value == selectedCalleId) {
                                option.prop('selected', true);
                            }
                            calleDropdown.append(option);
                        });
                    },
                    error: function () {
                        console.error('Error al cargar calles');
                        resetearDropdowns(['#ddlCalle']);
                    }
                });
            }

            function resetearDropdowns(selectors) {
                $.each(selectors, function(index, selector) {
                    $(selector).empty().append('<option value="">-- Seleccione ' + 
                        selector.replace('#ddl', '').toLowerCase() + ' --</option>');
                });
            }

            // FUNCIÓN PARA ACTUALIZAR VISTA PREVIA
            function actualizarVistaPrevia() {
                var provincia = $('#ddlProvincia option:selected').text();
                var canton = $('#ddlCanton option:selected').text();
                var distrito = $('#ddlDistrito option:selected').text();
                var calle = $('#ddlCalle option:selected').text();
                var detallada = $('#direccionDetallada').val().trim();

                var partes = [];
                
                if (provincia && provincia !== '-- Seleccione provincia --') partes.push(provincia);
                if (canton && canton !== '-- Seleccione cantón --') partes.push(canton);
                if (distrito && distrito !== '-- Seleccione distrito --') partes.push(distrito);
                if (calle && calle !== '-- Seleccione calle --') partes.push(calle);

                var direccionCompleta = partes.join(', ');
                if (detallada) {
                    direccionCompleta += '. ' + detallada;
                }

                var preview = $('#preview-direccion');
                if (direccionCompleta) {
                    preview.html('<strong>' + direccionCompleta + '</strong>');
                } else {
                    preview.html('<em>Seleccione la ubicación para ver la dirección completa</em>');
                }
            }

            // ==============================================
            // LÓGICA PARA MODAL DE CONTRASEÑA ADMIN
            // ==============================================
            
            mainForm.on('submit', function (e) {
                console.log('Formulario interceptado, mostrando modal de contraseña...');
                // Prevenir el envío automático del formulario
                e.preventDefault();
                
                // Usar función centralizada para mostrar el modal
                if (window.AdminPasswordModal && window.AdminPasswordModal.show) {
                    window.AdminPasswordModal.show();
                } else {
                    // Fallback si el modal centralizado no está disponible
                    $('#adminPasswordInput').val('');
                    $('#adminPasswordError').hide().text('');
                    $('#adminPasswordModal').modal('show');
                }
            });

            $('#confirmAdminPasswordBtn').on('click', function () {
                var password = $('#adminPasswordInput').val();
                var errorDiv = $('#adminPasswordError');
                // Obtener el token del formulario principal
                var token = mainForm.find('input[name="__RequestVerificationToken"]').val();

                if (!password) {
                    errorDiv.text('La contraseña no puede estar vacía.').show();
                    return;
                }

                // Llamada AJAX para validar la contraseña
                console.log('Validando contraseña del administrador...');
                $.ajax({
                    url: '@Url.Action("ValidateAdminPassword", "DatosPersonales")',
                    method: 'POST',
                    data: {
                        __RequestVerificationToken: token,
                        password: password
                    },
                    success: function (response) {
                        console.log('Respuesta del servidor:', response);
                        if (response.success) {
                            console.log('Contraseña correcta, enviando formulario...');
                            // Si la contraseña es correcta, oculta el modal y envía el formulario principal
                            $('#adminPasswordModal').modal('hide');
                            mainForm.off('submit').submit(); // Desactiva el interceptor y envía
                        } else {
                            console.log('Contraseña incorrecta:', response.message);
                            // Si es incorrecta, muestra el error
                            errorDiv.text(response.message).show();
                        }
                    },
                    error: function (xhr, status, error) {
                        console.log('Error en AJAX:', status, error);
                        // Error de comunicación
                        errorDiv.text('Error de comunicación con el servidor.').show();
                    }
                });
            });
        });
    </script>
} 