@model Emplaniapp.UI.Controllers.DatosPersonalesViewModel

@{
    ViewBag.Title = "Editar Datos Personales";
}

<div class="container mt-4">
    <div class="row">
        <div class="col-md-8 offset-md-2">
            <div class="card shadow">
                <div class="card-header bg-primary text-white">
                    <h4 class="mb-0">
                        <i class="fas fa-user-edit"></i> Editar Datos Personales
                    </h4>
                </div>
                <div class="card-body">
                    @if (TempData["Error"] != null)
                    {
                        <div class="alert alert-danger alert-dismissible fade show" role="alert">
                            <i class="fas fa-exclamation-triangle"></i> @TempData["Error"]
                            <button type="button" class="close" data-dismiss="alert">
                                <span>&times;</span>
                            </button>
                        </div>
                    }

                    @using (Html.BeginForm("EditarDatosPersonales", "DatosPersonales", FormMethod.Post, new { @class = "needs-validation", novalidate = "novalidate" }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.HiddenFor(model => model.IdEmpleado)

                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Nombre, "Primer Nombre *", new { @class = "form-label font-weight-bold" })
                                    @Html.TextBoxFor(model => model.Nombre, new { @class = "form-control", required = "required" })
                                    @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.SegundoNombre, "Segundo Nombre", new { @class = "form-label font-weight-bold" })
                                    @Html.TextBoxFor(model => model.SegundoNombre, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.SegundoNombre, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.PrimerApellido, "Primer Apellido *", new { @class = "form-label font-weight-bold" })
                                    @Html.TextBoxFor(model => model.PrimerApellido, new { @class = "form-control", required = "required" })
                                    @Html.ValidationMessageFor(model => model.PrimerApellido, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.SegundoApellido, "Segundo Apellido *", new { @class = "form-label font-weight-bold" })
                                    @Html.TextBoxFor(model => model.SegundoApellido, new { @class = "form-control", required = "required" })
                                    @Html.ValidationMessageFor(model => model.SegundoApellido, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Cedula, "Cédula *", new { @class = "form-label font-weight-bold" })
                                    @Html.TextBoxFor(model => model.Cedula, new { @class = "form-control", required = "required", type = "number" })
                                    @Html.ValidationMessageFor(model => model.Cedula, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.FechaNacimiento, "Fecha de Nacimiento *", new { @class = "form-label font-weight-bold" })
                                    @Html.TextBoxFor(model => model.FechaNacimiento, "{0:yyyy-MM-dd}", new { @class = "form-control", required = "required", type = "date" })
                                    @Html.ValidationMessageFor(model => model.FechaNacimiento, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.NumeroTelefonico, "Número Telefónico *", new { @class = "form-label font-weight-bold" })
                                    @Html.TextBoxFor(model => model.NumeroTelefonico, new { @class = "form-control", required = "required" })
                                    @Html.ValidationMessageFor(model => model.NumeroTelefonico, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.CorreoInstitucional, "Correo Institucional *", new { @class = "form-label font-weight-bold" })
                                    @Html.TextBoxFor(model => model.CorreoInstitucional, new { @class = "form-control", required = "required", type = "email" })
                                    @Html.ValidationMessageFor(model => model.CorreoInstitucional, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <div class="form-group mt-4">
                            <div class="d-flex justify-content-between">
                                <a href="@Url.Action("Detalles", new { id = Model.IdEmpleado })" class="btn btn-secondary">
                                    <i class="fas fa-arrow-left"></i> Cancelar
                                </a>
                                <button type="submit" class="btn btn-success">
                                    <i class="fas fa-save"></i> Guardar Cambios
                                </button>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    
    <script>
        // Validación personalizada
        (function() {
            'use strict';
            window.addEventListener('load', function() {
                var forms = document.getElementsByClassName('needs-validation');
                var validation = Array.prototype.filter.call(forms, function(form) {
                    form.addEventListener('submit', function(event) {
                        if (form.checkValidity() === false) {
                            event.preventDefault();
                            event.stopPropagation();
                        }
                        form.classList.add('was-validated');
                    }, false);
                });
            }, false);
        })();
    </script>
} 