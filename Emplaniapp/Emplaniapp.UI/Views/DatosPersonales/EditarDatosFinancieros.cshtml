@model Emplaniapp.UI.Models.DatosFinancierosViewModel

@{
    ViewBag.Title = "Editar Datos Financieros";
}

<div class="container">
    <div class="row">
        <div class="col-md-12">
            <h2>Editar Datos Financieros</h2>
            <hr />
        </div>
    </div>

    @using (Html.BeginForm("EditarDatosFinancieros", "DatosPersonales", FormMethod.Post, new { @class = "form-horizontal" }))
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(model => model.IdEmpleado)

        <div class="form-group">
            @Html.LabelFor(model => model.PeriocidadPago, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.PeriocidadPago, (SelectList)ViewBag.PeriocidadesPago, "Seleccione una periodicidad", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.PeriocidadPago, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SalarioAprobado, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SalarioAprobado, new { htmlAttributes = new { @class = "form-control", @type = "number", @step = "0.01" } })
                @Html.ValidationMessageFor(model => model.SalarioAprobado, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SalarioDiario, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SalarioDiario, new { htmlAttributes = new { @class = "form-control", @type = "number", @step = "0.01" } })
                @Html.ValidationMessageFor(model => model.SalarioDiario, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IdTipoMoneda, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.IdTipoMoneda, (SelectList)ViewBag.TiposMoneda, "Seleccione una moneda", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.IdTipoMoneda, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CuentaIBAN, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CuentaIBAN, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CuentaIBAN, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IdBanco, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.IdBanco, (SelectList)ViewBag.Bancos, "Seleccione un banco", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.IdBanco, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Guardar" class="btn btn-primary" />
                @Html.ActionLink("Cancelar", "Detalles", new { id = Model.IdEmpleado }, new { @class = "btn btn-default" })
            </div>
        </div>
    }

    @if (!ViewData.ModelState.IsValid)
    {
        <div class="alert alert-danger">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        </div>
    }
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
} 