@using Microsoft.AspNet.Identity
@using System.Security.Claims

@{
    var claimsIdentity = User.Identity as ClaimsIdentity;
    var idEmpleadoClaim = claimsIdentity?.FindFirst("idEmpleado");
    var idEmpleado = idEmpleadoClaim?.Value;

    string userRole = "Usuario"; // Valor por defecto
    var roleClaim = claimsIdentity?.FindFirst(ClaimTypes.Role);
    if (roleClaim != null)
    {
        userRole = roleClaim.Value;
    }

    // Función para obtener el rol activo (del Session si existe, sino el rol por defecto)
    Func<string> getActiveRole = () => {
        var activeRole = Session["ActiveRole"] as string;
        if (!string.IsNullOrEmpty(activeRole))
        {
            return activeRole;
        }
        return userRole; // Fallback al rol original
    };

    // Función para verificar si el usuario está en el rol activo especificado
    Func<string, bool> isInActiveRole = (role) => {
        var activeRole = getActiveRole();
        return activeRole.Equals(role, StringComparison.OrdinalIgnoreCase);
    };

    var activeUserRole = getActiveRole();
    

}
<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="utf-8" />
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <meta http-equiv="Content-Language" content="es" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title - Suplidora Royal Ltda.</title>
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")
</head>
<body>
    <nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-dark" id="main-navbar">
        <div class="container" style="background-color: #4682A9; border-radius: 50px; padding: 10px 25px; box-shadow: 0 4px 8px rgba(0,0,0,0.1);">
            <a href="@Url.Action("Index", "Home")" class="navbar-brand">
                <div>
                    <div>Suplidora</div>
                    <div>Royal Ltda.</div>
                </div>
            </a>
            <button type="button" class="navbar-toggler" data-bs-toggle="collapse" data-bs-target=".navbar-collapse" title="Alternar navegación" aria-controls="navbarSupportedContent"
                    aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse d-sm-inline-flex justify-content-between">
                <ul class="navbar-nav flex-grow-1">
                    @if (isInActiveRole("Administrador"))
                    {
                        <!-- Menú para Administrador -->
                        <li class="nav-item">@Html.ActionLink("Empleados", "ListarEmpleados", "Empleado", new { area = "" }, new { @class = "nav-link", style = "color: white;" })</li>
                        <li class="nav-item">@Html.ActionLink("Variables Financieras", "Index", "VariablesFinancieras", new { area = "" }, new { @class = "nav-link", style = "color: white;" })</li>
                    }

                    @if (isInActiveRole("Contador"))
                    {
                        <!-- Menú para Contador -->
                        <li class="nav-item">@Html.ActionLink("Tablero de Control", "Index", "Home", new { area = "" }, new { @class = "nav-link", style = "color: white;" })</li>
                        <li class="nav-item">@Html.ActionLink("Hoja Resumen", "listarHojaResumen", "HojaResumen", new { area = "" }, new { @class = "nav-link", style = "color: white;" })</li>
                        <li class="nav-item">@Html.ActionLink("Variables Financieras", "Index", "VariablesFinancieras", new { area = "" }, new { @class = "nav-link", style = "color: white;" })</li>
                    }

                    @if (isInActiveRole("Empleado"))
                    {
                        <!-- Menú para Empleado -->
                        <li class="nav-item">@Html.ActionLink("Perfil", "Detalles", "DatosPersonales", null, new { @class = "nav-link", style = "color: white;" })</li>
                        <li class="nav-item">@Html.ActionLink("Reporte de Pagos", "HistorialPagos", "PagoQuincenal", new { idEmpleado = idEmpleado }, new { @class = "nav-link", style = "color: white;" })</li>
                    }
                </ul>

                <ul class="navbar-nav">
                    @if (Request.IsAuthenticated)
                    {
                        <!-- Si el usuario está autenticado, mostrar role switcher y botón de Salir -->
                        <li class="nav-item navbar-user" style="margin-right: 20px; color: white;" id="role-switcher-container">
                            <i class="glyphicon glyphicon-user"></i>
                            <!-- Contenedor que será actualizado dinámicamente -->
                            <span id="role-display">@activeUserRole</span>
                        </li>
                        <li class="nav-item">
                            @using (Html.BeginForm("LogOff", "Account", FormMethod.Post, new { id = "logoutForm", @class = "form-inline" }))
                            {
                                @Html.AntiForgeryToken()
                                <button type="submit" class="btn btn-link nav-link" style="padding: 0; color: white; text-decoration: none;">
                                    <i class="glyphicon glyphicon-log-out"></i> Salir
                                </button>
                            }
                        </li>
                    }
                    else
                    {
                        <!-- Si NO está autenticado, mostrar enlaces a Login y Register -->
                        <li class="nav-item">
                            @Html.ActionLink("Registrar", "Register", "Account", new { area = "" }, new { @class = "nav-link", style = "color: white;" })
                        </li>
                        <li class="nav-item">
                            @Html.ActionLink("Iniciar sesión", "Login", "Account", new { area = "" }, new { @class = "nav-link", style = "color: white;" })
                        </li>
                    }
                </ul>
            </div>
        </div>
    </nav>

    <div class="container body-content">
        <!-- Token anti-falsificación para AJAX -->
        @Html.AntiForgeryToken()
        <br />
        @RenderBody()
        <hr />
        <footer>
            <p>&copy; @DateTime.Now.Year - Suplidora Royal Ltda. Todos los derechos reservados.</p>
        </footer>
    </div>

    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
    @RenderSection("scripts", required: false)

    <!-- Modal de Confirmación de Contraseña de Administrador -->
    <div class="modal fade" id="adminPasswordModal" tabindex="-1" role="dialog" aria-labelledby="adminPasswordModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="adminPasswordModalLabel">Confirmación de Administrador</h5>
                </div>
                <div class="modal-body">
                    <p>Para completar esta acción, por favor ingrese su contraseña de administrador.</p>
                    <div class="form-group">
                        <label for="adminPasswordInput">Contraseña</label>
                        <input type="password" class="form-control" id="adminPasswordInput" placeholder="Contraseña">
                        <span id="adminPasswordError" class="text-danger" style="display: none;">Contraseña incorrecta.</span>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" id="cancelAdminPasswordBtn">Cancelar</button>
                    <button type="button" class="btn btn-primary" id="confirmAdminPasswordBtn">Confirmar</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Estilos para Role Switcher -->
    <style>
        .spin {
            animation: spin 1s linear infinite;
        }
        
        @@keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }
        
        .dropdown-menu li a {
            transition: all 0.2s ease !important;
        }
    </style>

    <!-- Role Switcher JavaScript -->
    <script>
        $(document).ready(function() {
            // Verificar que el contenedor existe
            if ($('#role-display').length === 0) {
                console.error('Container #role-display not found!');
                return;
            }

            initializeRoleSwitcher();
        });

        function initializeRoleSwitcher() {
            // Obtener información de roles del usuario
            $.ajax({
                url: '@Url.Action("GetUserRoleInfo", "DatosPersonales")',
                type: 'GET',
                success: function(data) {
                    if (data.success) {
                        updateRoleDisplay(data);
                    } else {
                        console.log('Error al obtener roles:', data.message);
                    }
                },
                error: function(xhr, status, error) {
                    console.log('Error al cargar información de roles:', status, error);
                }
            });
        }

        function updateRoleDisplay(roleInfo) {
            var container = $('#role-display');
            
            if (roleInfo.hasMultipleRoles) {
                
                // Crear dropdown para múltiples roles (Bootstrap 3) con mejor diseño
                var dropdownHtml = '<div class="dropdown" style="display: inline-block;">' +
                    '<a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false" ' +
                    'style="color: white; text-decoration: none; padding: 5px 10px; border-radius: 4px; background-color: rgba(255,255,255,0.1); transition: all 0.3s ease;" ' +
                    'onmouseover="this.style.backgroundColor=\'rgba(255,255,255,0.2)\'" ' +
                    'onmouseout="this.style.backgroundColor=\'rgba(255,255,255,0.1)\'">' +
                    roleInfo.activeRole + ' <span class="caret"></span>' +
                    '</a>' +
                    '<ul class="dropdown-menu" style="background-color: #4682A9; border: 1px solid #3a6b8a; min-width: 160px; border-radius: 6px; margin-top: 5px;">';
                
                // Agregar cada rol disponible al dropdown
                roleInfo.availableRoles.forEach(function(role) {
                    var isActive = role === roleInfo.activeRole;
                    var checkIcon = isActive ? '<i class="glyphicon glyphicon-ok" style="margin-right: 8px; color: #90EE90;"></i>' : '<span style="margin-right: 20px;"></span>';
                    var fontWeight = isActive ? 'font-weight: bold;' : '';
                    var backgroundColor = isActive ? 'background-color: rgba(255,255,255,0.1);' : '';
                    
                    dropdownHtml += '<li>' +
                        '<a href="#" onclick="switchRole(\'' + role + '\')" ' +
                        'style="color: white; padding: 12px 16px; display: block; text-decoration: none; ' + fontWeight + backgroundColor + ' border-radius: 4px; margin: 2px 4px; transition: all 0.2s ease;" ' +
                        'onmouseover="if(\'' + role + '\' !== \'' + roleInfo.activeRole + '\') this.style.backgroundColor=\'rgba(255,255,255,0.15)\'" ' +
                        'onmouseout="this.style.backgroundColor=\'' + (isActive ? 'rgba(255,255,255,0.1)' : 'transparent') + '\'">' +
                        checkIcon + role +
                        '</a>' +
                        '</li>';
                });
                
                dropdownHtml += '</ul></div>';
                
                container.html(dropdownHtml);
                
                // Asegurar que Bootstrap procese el nuevo dropdown
                setTimeout(function() {
                    var dropdownElement = container.find('.dropdown-toggle');
                    
                    // Agregar evento de clic manual si Bootstrap no funciona
                    dropdownElement.on('click', function(e) {
                        e.preventDefault();
                        var menu = $(this).next('.dropdown-menu');
                        menu.toggle();
                    });
                    
                }, 100);
            } else {
                // Solo mostrar el rol actual si no hay múltiples roles
                container.html(roleInfo.activeRole);
            }
        }

        // Función global para cambiar de rol
        window.switchRole = function(newRole) {
            console.log('=== SWITCH ROLE LLAMADO ===');
            console.log('Nuevo rol solicitado:', newRole);
            
            // Ocultar el dropdown después del clic
            $('.dropdown-menu').hide();
            
            // Mostrar indicador de carga temporal
            var container = $('#role-display');
            var originalContent = container.html();
            container.html('<i class="glyphicon glyphicon-refresh spin" style="color: white;"></i> Cambiando...');
            
            $.ajax({
                url: '@Url.Action("SwitchRole", "DatosPersonales")',
                type: 'POST',
                data: { 
                    role: newRole,
                    __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                },
                success: function(data) {
                    console.log('Respuesta del servidor al cambiar rol:', data);
                    if (data.success) {
                        console.log('✓ Rol cambiado exitosamente a:', data.newRole);
                        
                        // Actualizar inmediatamente la visualización del rol
                        container.html(data.newRole);
                        
                        // Pequeña pausa para mostrar el cambio, luego recargar para actualizar el navbar
                        setTimeout(function() {
                            console.log('Recargando página para actualizar navbar...');
                            location.reload();
                        }, 500);
                    } else {
                        console.log('✗ Error en el cambio de rol:', data.message);
                        container.html(originalContent);
                        alert('Error: ' + data.message);
                    }
                },
                error: function(xhr, status, error) {
                    console.log('✗ Error AJAX al cambiar rol:');
                    console.log('Status:', status);
                    console.log('Error:', error);
                    console.log('Response Text:', xhr.responseText);
                    container.html(originalContent);
                    alert('Error al cambiar el rol: ' + error);
                }
            });
        };
    </script>
</body>
</html>