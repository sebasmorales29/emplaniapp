@model Emplaniapp.Abstracciones.ModelosParaUI.EmpleadoDto
@using Microsoft.AspNet.Identity
@using System.Security.Claims

@{
    ViewBag.Title = $"{Model.nombre} {Model.primerApellido} {Model.segundoApellido}";
    var seccionActiva = ViewBag.Seccion ?? "Datos personales";
   

    // Definir funciones de rol activo localmente (compatibles con C#5)
    var claimsIdentity = User != null ? User.Identity as ClaimsIdentity : null;
    Claim roleClaim = null;
    if (claimsIdentity != null)
    {
        roleClaim = claimsIdentity.FindFirst(ClaimTypes.Role);
    }
    string userRole = "Usuario";
    if (roleClaim != null)
    {
        userRole = roleClaim.Value;
    }

    Func<string> getActiveRole = () =>
    {
        var activeRole = Session != null ? Session["ActiveRole"] as string : null;
        if (!string.IsNullOrEmpty(activeRole))
        {
            return activeRole;
        }
        return userRole;
    };

    Func<string, bool> isInActiveRole = (role) =>
    {
        var activeRole = getActiveRole();
        return activeRole != null && activeRole.Equals(role, StringComparison.OrdinalIgnoreCase);
    };

    Func<string[], bool> isInAnyActiveRole = (roles) =>
    {
        var activeRole = getActiveRole();
        if (activeRole == null || roles == null) return false;
        return roles.Any(role => activeRole.Equals(role, StringComparison.OrdinalIgnoreCase));
    };

    Func<string, bool> isNotInActiveRole = (role) =>
    {
        return !isInActiveRole(role);
    };
}

<!-- Estilos -->
@*<link type="text/css" href="@Href("~/Content/CSS/estilosDatos.css")" rel="Stylesheet" />*@
<script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.bundle.min.js"></script>


<!-- Título del empleado -->
<div class="row">
    <div class="col-md-12">
        <h2 class="title">@Model.nombre @Model.primerApellido @Model.segundoApellido</h2>
        <a class="btn btn-light text-primary mb-2" href="@Url.Action("listarEmpleados","Empleado")">
            <i class="bi bi-arrow-left-short"></i>
            Volver
        </a>
        
    </div>
</div>

<!-- Mensaje de éxito -->
@if (TempData["Mensaje"] != null)
{
    <br />
    <div class="alert alert-success">
        @TempData["Mensaje"]
    </div>
}
<br />


<!-- Enlaces de navegación -->
<div class="row">
    <div class="col-md-12">
        <div class="nav nav-tabs" role="tablist">         

            <a href="@Url.Action("Detalles", "DatosPersonales", new { id = Model.idEmpleado, seccion = "Datos personales" })" class="@(seccionActiva == "Datos personales" ? "active" : "") nav-item nav-link">Datos personales</a>
            <a href="@Url.Action("Detalles", "DatosPersonales", new { id = Model.idEmpleado, seccion = "Historial" })" class="@(seccionActiva == "Historial" ? "active" : "") nav-item nav-link">Historial</a>
            @if (isInActiveRole("Administrador"))
            {
                <a href="@Url.Action("Detalles", "DatosPersonales", new { id = Model.idEmpleado, seccion = "Roles y Permisos" })" class="@(seccionActiva == "Roles y Permisos" ? "active" : "") nav-item nav-link">Roles y Permisos</a>
            }
            @if (isInActiveRole("Contador"))
            {
                <a href="@Url.Action("DetallesRemu", "Remuneraciones", new { id = Model.idEmpleado })" class="@(seccionActiva == "Remuneraciones" ? "active" : "")  nav-item nav-link">Remuneraciones</a>
                <a href="@Url.Action("Detalles", "Retenciones", new { id = Model.idEmpleado })" class="@(seccionActiva == "Retenciones" ? "active" : "")  nav-item nav-link">Retenciones</a>
                <a href="@Url.Action("Detalles", "Liquidaciones", new { id = Model.idEmpleado })" class="@(seccionActiva == "Liquidacion" ? "active" : "")  nav-item nav-link">Liquidaci&oacute;n</a>
            }
            <a href="@Url.Action("Detalles", "DatosPersonales", new { id = Model.idEmpleado, seccion = "Observaciones" })" class="@(seccionActiva == "Observaciones" ? "active" : "")  nav-item nav-link">Observaciones</a>
        </div>
        <br />
    </div>
</div>


<!-- Contenido -->
    <div class="row">
        <div class="col-md-12">
            @if (seccionActiva == "Datos personales")
            {
                <div id="contenido-datos-personales">

                    <div class="text-center mb-2">
                        <h2><strong>Datos Personales</strong></h2>
                        <br />
                    </div>
                    <div class="row">
                        <div class="col-md-6">

                            <!-- Información personal -->
                            <div class="card card-block card-stretch">
                                <div class="card-header row justify-content-between m-0">
                                    <h3><i class="bi bi-person-fill"></i> Informaci&oacute;n personal</h3>

                                    @if (isInAnyActiveRole(new[] { "Administrador", "Empleado" }))
                                    {
                                        <a href="@Url.Action("EditarDatosPersonales", "DatosPersonales", new { id = Model.idEmpleado })"
                                           class="btn btn-light text-primary">
                                            <i class="bi bi-pencil-fill"></i>
                                        </a>
                                    }
                                </div>
                                <div class="card-body">
                                    <div class="datos-row">
                                        <div class="datos-label">@Html.DisplayNameFor(m => @Model.nombre)</div>
                                        <div class="datos-value">@Model.nombre</div>
                                    </div>
                                    @if (!string.IsNullOrEmpty(Model.segundoNombre))
                                    {
                                        <div class="datos-row">
                                            <div class="datos-label">@Html.DisplayNameFor(m => @Model.segundoNombre)</div>
                                            <div class="datos-value">@Model.segundoNombre</div>
                                        </div>
                                    }
                                    <div class="datos-row">
                                        <div class="datos-label">@Html.DisplayNameFor(m => @Model.primerApellido)</div>
                                        <div class="datos-value">@Model.primerApellido</div>
                                    </div>
                                    <div class="datos-row">
                                        <div class="datos-label">@Html.DisplayNameFor(m => @Model.segundoApellido)</div>
                                        <div class="datos-value">@Model.segundoApellido</div>
                                    </div>
                                    <div class="datos-row">
                                        <div class="datos-label">@Html.DisplayNameFor(m => @Model.fechaNacimiento)</div>
                                        <div class="datos-value">@Model.fechaNacimiento.ToString("dd/MM/yyyy")</div>
                                    </div>
                                    <div class="datos-row">
                                        <div class="datos-label">@Html.DisplayNameFor(m => @Model.cedula)</div>
                                        <div class="datos-value">@Model.cedula</div>
                                    </div>
                                    <div class="datos-row">
                                        <div class="datos-label">@Html.DisplayNameFor(m => @Model.direccionCompleta)</div>
                                        <div class="datos-value">@Model.direccionCompleta</div>
                                    </div>
                                    <div class="datos-row">
                                        <div class="datos-label">@Html.DisplayNameFor(m => @Model.correoInstitucional)</div>
                                        <div class="datos-value">@Model.correoInstitucional</div>
                                    </div>
                                    <div class="datos-row">
                                        <div class="datos-label">@Html.DisplayNameFor(m => @Model.numeroTelefonico)</div>
                                        <div class="datos-value">@Model.numeroTelefonico</div>
                                    </div>
                                </div>
                            </div>

                            <!-- Contacto de emergencia -->
                            @*<div class="card card-block card-stretch">
                    <div class="card-header row justify-content-between m-0">
                        <h3><i class="bi bi-person-lines-fill"></i> Contactos de Emergencia</h3>
                        @if (isInAnyActiveRole(new[] { "Administrador", "Empleado" }))
                        {
                            <a href="#"
                               class="btn btn-light text-primary">
                                <i class="bi bi-pencil-fill"></i>
                            </a>
                        }
                    </div>

                    <div class="card-body text-danger">
                        <div class="datos-row">
                            <div class="datos-label">Nombre de contacto</div>
                            <div class="datos-value">@Model.nombre</div>
                        </div>
                        <div class="datos-row">
                            <div class="datos-label">Relacion con empleado</div>
                            <div class="datos-value">Pariente</div>
                        </div>

                        <div class="datos-row">
                            <div class="datos-label">Teléfono:</div>
                            <div class="datos-value">@Model.numeroTelefonico</div>
                        </div>
                    </div>
                </div>*@

                        </div>

                        <!-- -------------------------------------------- -->

                        <div class="col-md-6">
                            <!-- Datos Laborales -->
                            <div class="card card-block card-stretch">
                                <div class="card-header row justify-content-between m-0">
                                    <h3><i class="bi bi-briefcase-fill"></i> Datos Laborales</h3>
                                    @if (isInAnyActiveRole(new[] { "Administrador", "Contador" }))
                                    {
                                        <a href="@Url.Action("EditarDatosLaborales", "DatosPersonales", new { id = Model.idEmpleado })"
                                           class="btn btn-light text-primary">
                                            <i class="bi bi-pencil-fill"></i>
                                        </a>
                                    }
                                </div>
                                <div class="card-body">
                                    <div class="datos-row">
                                        <div class="datos-label">@Html.DisplayNameFor(m => @Model.idCargo)</div>
                                        <div class="datos-value">9832</div>
                                    </div>
                                    <div class="datos-row">
                                        <div class="datos-label">@Html.DisplayNameFor(m => @Model.nombreCargo)</div>
                                        <div class="datos-value">@Model.nombreCargo</div>
                                    </div>
                                    <div class="datos-row">
                                        <div class="datos-label">@Html.DisplayNameFor(m => @Model.fechaContratacion)</div>
                                        <div class="datos-value">@Model.fechaContratacion.ToString("dd/MM/yyyy")</div>
                                    </div>
                                    <div class="datos-row">
                                        <div class="datos-label">@Html.DisplayNameFor(m => @Model.fechaSalida)</div>
                                        <div class="datos-value">@(Model.fechaSalida.HasValue ? Model.fechaSalida.Value.ToString("dd/MM/yyyy") : "--/--/----")</div>
                                    </div>
                                </div>
                            </div>

                            <!-- Datos Financieros -->
                            <div class="card card-block card-stretch">
                                <div class="card-header row justify-content-between m-0">
                                    <h3><i class="bi bi-bank2"></i> Datos Financieros</h3>
                                    @if (isInAnyActiveRole(new[] { "Administrador", "Contador" }))
                                    {
                                        <a href="@Url.Action("EditarDatosFinancieros", "DatosPersonales", new { id = Model.idEmpleado })"
                                           class="btn btn-light text-primary">
                                            <i class="bi bi-pencil-fill"></i>
                                        </a>
                                    }
                                </div>
                                <div class="card-body">
                                    <div class="datos-row">
                                        <div class="datos-label">@Html.DisplayNameFor(m => @Model.periocidadPago)</div>
                                        <div class="datos-value">@Model.periocidadPago</div>
                                    </div>
                                    <div class="datos-row">
                                        <div class="datos-label">@Html.DisplayNameFor(m => @Model.salarioAprobado)</div>
                                        <div class="datos-value">@Model.salarioAprobado.ToString("C")</div>
                                    </div>
                                    <div class="datos-row">
                                        <div class="datos-label">@Html.DisplayNameFor(m => @Model.nombreMoneda)</div>
                                        <div class="datos-value">@Model.nombreMoneda</div>
                                    </div>
                                    <div class="datos-row">
                                        <div class="datos-label">@Html.DisplayNameFor(m => @Model.cuentaIBAN)</div>
                                        <div class="datos-value">@Model.cuentaIBAN</div>
                                    </div>
                                    <div class="datos-row">
                                        <div class="datos-label">@Html.DisplayNameFor(m => @Model.nombreBanco)</div>
                                        <div class="datos-value">@Model.nombreBanco</div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }

            else if (seccionActiva == "Historial")
            {
                <div id="contenedor-lista-historial">
                    <div class="loading">
                        <div class="spinner"></div>
                        <p>Cargando historial...</p>
                    </div>
                </div>
            }

            else if (seccionActiva == "Roles y Permisos")
            {
                if (isInActiveRole("Administrador"))
                {
                    <div id="contenedor-roles-permisos">
                        @Html.Partial("_RolesYPermisos", Model)
                    </div>
                }
                else
                {
                    <div class="alert alert-warning">
                        <i class="fa fa-exclamation-triangle"></i>
                        No tienes permisos para acceder a esta sección.
                    </div>
                }
            }

            else if (seccionActiva == "Observaciones")
            {
                <div id="contenedor-lista-observaciones"> </div>
            }
        </div>
    </div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        $(document).ready(function () {

            // --- INICIO: Lógica de carga y filtrado de observaciones ---
            function cargarObservaciones() {
                var empleadoId = @Model.idEmpleado;
                var container = $('#contenedor-lista-observaciones');

                // Leer valores de los filtros
                var ano = container.find('#filtro-ano').val();
                var mes = container.find('#filtro-mes').val();
                var usuarioId = container.find('#filtro-usuario').val();

                var url = '@Url.Action("ObtenerListaObservaciones", "DatosPersonales")' +
                          '?id=' + empleadoId +
                          '&ano=' + (ano || '') +
                          '&mes=' + (mes || '') +
                          '&usuarioId=' + (usuarioId || '');

                container.html("<p>Cargando observaciones...</p>");

                $.ajax({
                    url: url,
                    type: 'GET',
                    success: function (response) {
                        if (response.success) {
                            container.html(response.html);
                        } else {
                            container.html("<p class='text-danger'>Hubo un problema al obtener las observaciones.</p>");
                        }
                    },
                    error: function (xhr) {
                        container.html("<p class='text-danger'>Error al cargar las observaciones: " + xhr.status + ' ' + xhr.statusText + "</p>");
                    }
                });
            }

            if ('@seccionActiva' === 'Observaciones') {
                cargarObservaciones();
            }

            // --- INICIO: Lógica de carga del historial ---
            function cargarHistorial() {
                var empleadoId = @Model.idEmpleado;
                var container = $('#contenedor-lista-historial');

                console.log('🔍 Iniciando carga de historial para empleado:', empleadoId);
                container.html("<div class='loading'><div class='spinner'></div><p>Cargando historial...</p></div>");

                var url = '@Url.Action("Empleado", "Historial")';
                console.log('🌐 URL de la petición:', url);

                $.ajax({
                    url: url,
                    type: 'GET',
                    data: { id: empleadoId },
                    headers: {
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                    beforeSend: function() {
                        console.log('📤 Enviando petición AJAX...');
                    },
                    success: function (response) {
                        console.log('✅ Respuesta recibida:', response);
                        container.html(response);
                    },
                    error: function (xhr, status, error) {
                        console.error('❌ Error en la petición AJAX:', {xhr: xhr, status: status, error: error});
                        container.html("<p class='text-danger'>Error al cargar el historial: " + xhr.status + ' ' + xhr.statusText + "</p>");
                    }
                });
            }

            if ('@seccionActiva' === 'Historial') {
                cargarHistorial();
            }
            // --- FIN: Lógica de carga del historial ---

            // Listener para el botón de aplicar filtros
            $('#contenedor-lista-observaciones').on('click', '#btn-aplicar-filtros', function() {
                cargarObservaciones();
            });

            // Listener para el botón de quitar filtros
            $('#contenedor-lista-observaciones').on('click', '#btn-quitar-filtros', function() {
                var container = $('#contenedor-lista-observaciones');
                container.find('#filtro-ano').val('');
                container.find('#filtro-mes').val('');
                container.find('#filtro-usuario').val('');
                cargarObservaciones();
            });

            // --- INICIO: Lógica del modal para agregar/editar observaciones ---
            var modalContainer = $('#modal-container');
            var modalContent = $('#modal-content-container');

            // Abrir modal (agregar/editar)
            $('#contenedor-lista-observaciones').on('click', '.btn-agregar-observacion, .btn-editar-observacion', function () {
                var url = $(this).data('url');
                modalContent.load(url, function () {
                    modalContainer.modal('show');
                    $.validator.unobtrusive.parse(modalContent.find('form'));
                });
            });

            // Guardar en modal
            modalContainer.on('click', '#btn-guardar-observacion', function () {
                var form = modalContent.find('observacionForm');
                if (!form.valid()) return;

                $.ajax({
                    url: form.attr('action'),
                    method: 'POST',
                    data: form.serialize(),
                    success: function (response) {
                        if (response.success) {
                            modalContainer.modal('hide');
                            cargarObservaciones();
                        } else {
                            modalContent.html(response);
                            $.validator.unobtrusive.parse(modalContent.find('form'));
                        }
                    },
                    error: function () {
                        alert('Ocurrió un error de comunicación con el servidor.');
                    }
                });
            });


            modalContainer.on('click', '#btn-cancelar-observacion', function () {
                $('#modal-container').modal('hide');
            });

            // --- FIN: Lógica del modal ---
        });
    </script>
}

<!-- Modal Genérico (Solo el contenedor) -->
<div class="modal fade" id="modal-container"  tabindex="-1" role="dialog" aria-labelledby="modal-label" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content" id="modal-content-container">
            <!-- El contenido completo del modal (header, body, footer) se cargará aquí -->
        </div>
    </div>
</div>



