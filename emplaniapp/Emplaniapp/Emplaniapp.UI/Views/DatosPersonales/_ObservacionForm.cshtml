@model Emplaniapp.Abstracciones.ModelosParaUI.ObservacionDto

@{
    var isEdit = Model.IdObservacion > 0;
    var formAction = isEdit ? "EditarObservacion" : "AgregarObservacion";
    var modalTitle = isEdit ? "Editar Observación" : "Agregar Nueva Observación";
}

@* Este fragmento se inyectará en el cuerpo del modal principal en Detalles.cshtml *@
<div class="modal-header">
    <h5 class="modal-title">@modalTitle</h5>
    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
        <span aria-hidden="true">&times;</span>
    </button>
</div>
<div class="modal-body">
    @using (Html.BeginForm(formAction, "DatosPersonales", FormMethod.Post, new { id = "observacionForm" }))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @Html.HiddenFor(model => model.IdObservacion)
        @Html.HiddenFor(model => model.IdEmpleado)

        <div class="form-group">
            @Html.LabelFor(model => model.Titulo, new { @class = "control-label" })
            @Html.TextBoxFor(model => model.Titulo, new { @class = "form-control", placeholder = "Ej: Reunión de desempeño" })
            @Html.ValidationMessageFor(model => model.Titulo, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Descripcion, "Descripción", new { @class = "control-label" })
            @Html.TextAreaFor(model => model.Descripcion, new { @class = "form-control", rows = 5, placeholder = "Escriba aquí los detalles de la observación..." })
            @Html.ValidationMessageFor(model => model.Descripcion, "", new { @class = "text-danger" })
        </div>
    }
</div>
<div class="modal-footer">
    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancelar</button>
    <button type="button" class="btn btn-primary" id="btn-guardar-observacion">Guardar</button>
</div> 