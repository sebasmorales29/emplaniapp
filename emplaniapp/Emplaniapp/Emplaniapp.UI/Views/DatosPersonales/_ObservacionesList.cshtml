@model IEnumerable<Emplaniapp.Abstracciones.ModelosParaUI.ObservacionDto>
@using Microsoft.AspNet.Identity
@using System.Security.Claims

@{
    // Definir funciones de rol activo localmente
    var claimsIdentity = User.Identity as ClaimsIdentity;
    var roleClaim = claimsIdentity?.FindFirst(ClaimTypes.Role);
    string userRole = "Usuario";
    if (roleClaim != null)
    {
        userRole = roleClaim.Value;
    }

    Func<string> getActiveRole = () => {
        var activeRole = Session["ActiveRole"] as string;
        if (!string.IsNullOrEmpty(activeRole))
        {
            return activeRole;
        }
        return userRole;
    };

    Func<string, bool> isInActiveRole = (role) => {
        var activeRole = getActiveRole();
        return activeRole.Equals(role, StringComparison.OrdinalIgnoreCase);
    };

    Func<string, bool> isNotInActiveRole = (role) => {
        return !isInActiveRole(role);
    };
}

<div class="text-center mb-2">
    <h2><strong>Observaciones</strong></h2>
    <br />
</div>


<div class="card card-block card-stretch">
    <div class="card-body">

        <div class="row">
            <div class="col-md-3">

                @if (isNotInActiveRole("Empleado"))
                {
                    <button type="button" class="btn btn-primary btn-block mb-3 btn-agregar-observacion"
                            data-url="@Url.Action("AgregarObservacion", "DatosPersonales", new { idEmpleado = ViewBag.IdEmpleado })">
                        <i class="bi bi-plus"></i>
                        Agregar Observaci&oacute;n
                    </button>
                    <hr />
                }

                <div id="filtros-observaciones">
                    <h5 class="mb-3">Filtrar por:</h5>

                    <div class="form-group">
                        <label for="filtro-ano">A&ntilde;o</label>
                        @Html.DropDownList("filtro-ano", new SelectList(ViewBag.AnosDisponibles, ViewBag.AnoSeleccionado), "Todos", new { @class = "form-control" })
                    </div>

                    <div class="form-group">
                        <label for="filtro-mes">Mes</label>
                        @Html.DropDownList("filtro-mes", new SelectList(ViewBag.MesesDisponibles, "Value", "Text", ViewBag.MesSeleccionado), "Todos", new { @class = "form-control" })
                    </div>

                    <div class="form-group">
                        <label for="filtro-usuario">Usuario</label>
                        @Html.DropDownList("filtro-usuario", new SelectList(ViewBag.UsuariosDisponibles, "Value", "Text", ViewBag.UsuarioSeleccionado), "Todos", new { @class = "form-control" })
                    </div>

                    <button type="button" id="btn-aplicar-filtros" class="btn btn-outline-primary btn-block">Aplicar Filtros</button>

                    @if (ViewBag.FiltrosActivos == true)
                    {
                        <button type="button" id="btn-quitar-filtros" class="btn btn-outline-danger btn-block mt-2">Quitar Filtros</button>
                    }
                </div>
            </div>
            <br />
            <br />
            <div class="col-md-9 observaciones-list">
                @if (!Model.Any())
                {
                    <p>No hay observaciones para este empleado todav√≠a.</p>
                }
                else
                {
                    foreach (var item in Model)
                    {
                        <div class="card card-block card-stretch basic-drop-shadow">
                           
                            <div class="card-header row justify-content-between m-0">
                                <div>
                                    <h5 class="card-title">@item.Titulo</h5>
                                    <div class="text-secondary">
                                        <div>Por: @item.NombreUsuarioCreo el @item.FechaCreacion.ToString("dd 'de' MMMM, yyyy")</div>
                                        @if (item.FechaEdicion.HasValue)
                                        {
                                            <div>Editado: @item.NombreUsuarioEdito el @item.FechaEdicion.Value.ToString("dd 'de' MMMM, yyyy")</div>
                                        }
                                    </div>
                                </div>
                                @if (isNotInActiveRole("Empleado"))
                                {
                                    <button type="button" class="btn btn-light text-primary btn-editar-observacion"
                                            data-url="@Url.Action("EditarObservacion", "DatosPersonales", new { id = item.IdObservacion })">
                                        <i class="bi bi-pencil-fill"></i>
                                    </button>
                                }
                            </div>
                            
                            <div class="card-body">@item.Descripcion</div>
                        </div>
                    }
                }
            </div>
        </div>
        </div>
</div> 