

<!-- Modal de Confirmaci√≥n de Contrase√±a de Administrador -->
<div class="modal fade" id="adminPasswordModal" data-bs-backdrop="static" tabindex="-1" role="dialog" aria-labelledby="adminPasswordModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="adminPasswordModalLabel">Confirmaci&oacute;n de Administrador Requerida</h5>
            </div>

            <div class="modal-body">
                <p>Para guardar estos cambios, por favor ingrese su contrase&ntilde;a de administrador.</p>
                @*<form id="adminPasswordForm" onsubmit="return false;">
                    <div class="form-group">*@
                        <label for="adminPasswordInput">Contrase&ntilde;a</label>
                        <div class="password-wrapper">
                            <input type="password" class="form-control" id="adminPasswordInput" placeholder="Contrase&ntilde;a"/>
                            @*<i class="fa fa-eye toggle-password" style="position: absolute; right: 10px; top: 50%; transform: translateY(-50%); cursor: pointer; color: #666; z-index: 10; font-size: 16px;" title="Mostrar/Ocultar contrase√±a">üëÅ</i>*@
                        </div>
                        <div id="adminPasswordError" class="text-danger mt-2" style="display: none;"></div>
                    @*</div>
                </form>*@
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" id="cancelAdminPasswordBtn" data-dismiss="modal">Cancelar</button>
                <button type="button" class="btn btn-primary" id="confirmAdminPasswordBtn">Confirmar y Guardar</button>
            </div>
        </div>
    </div>
</div>

<!-- Modal de √âxito para Cambios de Roles -->
<div class="modal fade" id="successModal" data-bs-backdrop="static" tabindex="-1" role="dialog" aria-labelledby="successModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header bg-success text-white">
                <h5 class="modal-title" id="successModalLabel">
                    <i class="bi bi-check-circle-fill me-2"></i>¬°Cambios Aplicados Exitosamente!
                </h5>
            </div>
            <div class="modal-body text-center">
                <div class="mb-3">
                    <i class="bi bi-check-circle-fill text-success" style="font-size: 3rem;"></i>
                </div>
                <h6 class="mb-3">Los cambios de roles han sido aplicados correctamente</h6>
                <p class="text-muted mb-0">
                    Los permisos del empleado se han actualizado en el sistema. 
                    La sesi√≥n del usuario se actualizar√° autom√°ticamente.
                </p>
            </div>
            <div class="modal-footer justify-content-center">
                <button type="button" class="btn btn-success" id="closeSuccessModal">
                    <i class="bi bi-check-lg me-2"></i>Entendido
                </button>
            </div>
        </div>
    </div>
</div>

<!-- Modal de Error para Cambios de Roles -->
<div class="modal fade" id="errorModal" data-bs-backdrop="static" tabindex="-1" role="dialog" aria-labelledby="errorModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header bg-danger text-white">
                <h5 class="modal-title" id="errorModalLabel">
                    <i class="bi bi-exclamation-triangle-fill me-2"></i>Error al Aplicar Cambios
                </h5>
            </div>
            <div class="modal-body text-center">
                <div class="mb-3">
                    <i class="bi bi-exclamation-triangle-fill text-danger" style="font-size: 3rem;"></i>
                </div>
                <h6 class="mb-3" id="errorModalMessage">Ocurri√≥ un error al aplicar los cambios de roles</h6>
                <p class="text-muted mb-0">
                    Por favor, intente nuevamente o contacte al administrador si el problema persiste.
                </p>
            </div>
            <div class="modal-footer justify-content-center">
                <button type="button" class="btn btn-danger" id="closeErrorModal">
                    <i class="bi bi-x-lg me-2"></i>Entendido
                </button>
            </div>
        </div>
    </div>
</div>

<script>
// Namespace global para el modal de contrase√±a de administrador
window.AdminPasswordModal = window.AdminPasswordModal || {};

// ‚ú® MEJORA: Verificar que jQuery est√© disponible antes de ejecutar c√≥digo
if (typeof jQuery !== 'undefined') {
    $(document).ready(function() {
    // Solo inicializar una vez
    if (window.AdminPasswordModal.initialized) {
        return;
    }

    // Funci√≥n centralizada para limpiar el modal
    window.AdminPasswordModal.clear = function() {
        $('#adminPasswordInput').val('');
        $('#adminPasswordError').hide().text('');
    };

    // Funci√≥n centralizada para mostrar el modal
    window.AdminPasswordModal.show = function() {
        window.AdminPasswordModal.clear();
        $('#adminPasswordModal').modal('show');
    };

    // Funci√≥n centralizada para ocultar el modal
    window.AdminPasswordModal.hide = function() {
        $('#adminPasswordModal').modal('hide');
    };

    // Marcar como inicializado
    window.AdminPasswordModal.initialized = true;


    // Para cerrar
    $('#cancelAdminPasswordBtn').click(function () {
        $('#adminPasswordModal').modal('hide');
    });

    // ‚ú® NUEVO: Manejar modal de √©xito
    $('#closeSuccessModal').click(function () {
        $('#successModal').modal('hide');
    });

    // ‚ú® NUEVO: Funci√≥n para mostrar modal de √©xito
    window.showSuccessModal = function(message) {
        if (message) {
            $('#successModal .modal-body h6').text(message);
        }
        $('#successModal').modal('show');
    };

    // ‚ú® NUEVO: Manejar modal de error
    $('#closeErrorModal').click(function () {
        $('#errorModal').modal('hide');
    });

    // ‚ú® NUEVO: Funci√≥n para mostrar modal de error
    window.showErrorModal = function(message) {
        if (message) {
            $('#errorModalMessage').text(message);
        }
        $('#errorModal').modal('show');
    };

    // ‚ú® NUEVO: L√≥gica de validaci√≥n de contrase√±a de administrador
    $('#confirmAdminPasswordBtn').click(function () {
        console.log('üîç DIAGN√ìSTICO: Bot√≥n de confirmaci√≥n de admin presionado');
        var password = $('#adminPasswordInput').val();
        console.log('üîç DIAGN√ìSTICO: Contrase√±a ingresada:', password ? '***' : 'VAC√çA');
        
        if (!password) {
            console.log('üîç DIAGN√ìSTICO: Contrase√±a vac√≠a, mostrando error');
            $('#adminPasswordError').text('La contrase√±a no puede estar vac√≠a.').show();
            return;
        }
        
        var token = $('input[name="__RequestVerificationToken"]').val();

        console.log('üîç DIAGN√ìSTICO: Enviando AJAX para validar contrase√±a de admin...');
        // ‚ú® CORRECCI√ìN: Determinar el controlador correcto seg√∫n el contexto
        var controller = window.currentController || 'Empleado';
        var url = controller === 'DatosPersonales' ? 
            '@Url.Action("ValidateAdminPassword", "DatosPersonales")' : 
            '@Url.Action("ValidateAdminPassword", "Empleado")';
        
        console.log('üîç DIAGN√ìSTICO: Usando controlador:', controller, 'URL:', url);
        
        $.ajax({
            url: url,
            type: 'POST',
            dataType: 'json',
            data: {
                __RequestVerificationToken: token,
                password: password
            },
            success: function (response) {
                console.log('üîç DIAGN√ìSTICO: Respuesta AJAX recibida:', response);
                if (response.success) {
                    console.log('üîç DIAGN√ìSTICO: Contrase√±a v√°lida, procesando cambios pendientes...');
                    console.log('üîç DIAGN√ìSTICO: === INICIO DEL PROCESAMIENTO DE CAMBIOS ===');
                    console.log('üîç DIAGN√ìSTICO: window.pendingRoleChanges existe:', !!window.pendingRoleChanges);
                    console.log('üîç DIAGN√ìSTICO: window.pendingRoleChanges valor:', window.pendingRoleChanges);
                    console.log('üîç DIAGN√ìSTICO: window.pendingRoleChanges.length:', window.pendingRoleChanges ? window.pendingRoleChanges.length : 'N/A');
                    
                    $('#adminPasswordModal').modal('hide');
                    
                    // ‚ú® NUEVO: Procesar cambios de roles pendientes si existen
                    if (window.pendingRoleChanges && window.pendingRoleChanges.length > 0) {
                        console.log('üîç DIAGN√ìSTICO: ‚úÖ ENCONTRADOS cambios de roles pendientes!');
                        console.log('üîç DIAGN√ìSTICO: Procesando cambios de roles pendientes...', window.pendingRoleChanges);
                        console.log('üîç DIAGN√ìSTICO: Tipo de procesarCambiosDirectamente:', typeof procesarCambiosDirectamente);
                        console.log('üîç DIAGN√ìSTICO: Funci√≥n disponible en window:', typeof window.procesarCambiosDirectamente);
                        console.log('üîç DIAGN√ìSTICO: Funci√≥n disponible globalmente:', typeof window.procesarCambiosDirectamente);
                        
                        // ‚ú® LOGGING DETALLADO: Verificar todas las funciones disponibles
                        console.log('üîç DIAGN√ìSTICO: === VERIFICACI√ìN DE FUNCIONES DISPONIBLES ===');
                        console.log('üîç DIAGN√ìSTICO: typeof procesarCambiosDirectamente:', typeof procesarCambiosDirectamente);
                        console.log('üîç DIAGN√ìSTICO: typeof window.procesarCambiosDirectamente:', typeof window.procesarCambiosDirectamente);
                        console.log('üîç DIAGN√ìSTICO: Object.keys(window):', Object.keys(window));
                        console.log('üîç DIAGN√ìSTICO: Funciones que contienen "procesar":', Object.keys(window).filter(key => key.toLowerCase().includes('procesar')));
                        console.log('üîç DIAGN√ìSTICO: Funciones que contienen "cambio":', Object.keys(window).filter(key => key.toLowerCase().includes('cambio')));
                        
                        // ‚ú® MEJORA: Esperar un poco para asegurar que todo est√© cargado
                        setTimeout(function() {
                            console.log('üîç DIAGN√ìSTICO: === EJECUTANDO PROCESAMIENTO DESPU√âS DEL DELAY ===');
                            console.log('üîç DIAGN√ìSTICO: Ejecutando procesamiento de cambios despu√©s del delay...');
                            
                            // ‚ú® VERIFICACI√ìN M√öLTIPLE DE FUNCIONES
                            console.log('üîç DIAGN√ìSTICO: === VERIFICACI√ìN FINAL DE FUNCIONES ===');
                            console.log('üîç DIAGN√ìSTICO: typeof procesarCambiosDirectamente:', typeof procesarCambiosDirectamente);
                            console.log('üîç DIAGN√ìSTICO: typeof window.procesarCambiosDirectamente:', typeof window.procesarCambiosDirectamente);
                            
                            if (typeof procesarCambiosDirectamente === 'function') {
                                console.log('üîç DIAGN√ìSTICO: ‚úÖ Llamando a procesarCambiosDirectamente (global)...');
                                try {
                                    procesarCambiosDirectamente(window.pendingRoleChanges);
                                    console.log('üîç DIAGN√ìSTICO: ‚úÖ procesarCambiosDirectamente ejecutado exitosamente');
                                } catch (error) {
                                    console.error('‚ùå ERROR: Error al ejecutar procesarCambiosDirectamente:', error);
                                }
                            } else if (typeof window.procesarCambiosDirectamente === 'function') {
                                console.log('üîç DIAGN√ìSTICO: ‚úÖ Llamando a window.procesarCambiosDirectamente...');
                                try {
                                    window.procesarCambiosDirectamente(window.pendingRoleChanges);
                                    console.log('üîç DIAGN√ìSTICO: ‚úÖ window.procesarCambiosDirectamente ejecutado exitosamente');
                                } catch (error) {
                                    console.error('‚ùå ERROR: Error al ejecutar window.procesarCambiosDirectamente:', error);
                                }
                            } else {
                                console.error('‚ùå ERROR: Funci√≥n procesarCambiosDirectamente no encontrada en ning√∫n contexto');
                                console.log('üîç DIAGN√ìSTICO: Funciones disponibles en window:', Object.keys(window).filter(key => key.includes('procesar')));
                                console.log('üîç DIAGN√ìSTICO: Todas las funciones en window:', Object.keys(window).sort());
                            }
                        }, 100); // 100ms de delay
                        
                        // ‚ú® CORRECCI√ìN: NO limpiar aqu√≠, se limpiar√° despu√©s de procesar
                    } else {
                        console.log('üîç DIAGN√ìSTICO: ‚ùå NO HAY cambios de roles pendientes');
                        console.log('üîç DIAGN√ìSTICO: window.pendingRoleChanges:', window.pendingRoleChanges);
                        console.log('üîç DIAGN√ìSTICO: === PROCESANDO FORMULARIO NORMAL ===');
                        
                        // Si no hay cambios de roles pendientes, enviar formulario normal
                        var form = $('#createEmployeeForm');
                        console.log('üîç DIAGN√ìSTICO: Formulario createEmployeeForm encontrado:', form.length > 0);
                        if (form.length > 0) {
                            console.log('üîç DIAGN√ìSTICO: Enviando formulario...');
                            form.off('submit').submit();
                        } else {
                            console.log('üîç DIAGN√ìSTICO: ‚ùå Formulario createEmployeeForm no encontrado');
                        }
                    }
                } else {
                    console.log('üîç DIAGN√ìSTICO: Contrase√±a inv√°lida, mostrando error');
                    $('#adminPasswordError').text('Contrase√±a incorrecta.').show();
                }
            },
            error: function () {
                console.error('Error al validar contrase√±a de administrador');
                alert('Ocurri√≥ un error al validar la contrase√±a.');
                $('#adminPasswordModal').modal('hide');
            }
        });
    });


    //// L√≥gica para mostrar/ocultar contrase√±a
    //$(document).on('click', '.toggle-password', function() {
    //    var $icon = $(this);
    //    var $input = $icon.closest('.password-wrapper').find('input');

    //    // Cambiar el tipo de input
    //    if ($input.attr('type') === 'password') {
    //        $input.attr('type', 'text');
    //        $icon.removeClass('fa-eye').addClass('fa-eye-slash');
    //        $icon.text('üëÅ‚Äçüó®'); // Emoji para ojo tachado
    //    } else {
    //        $input.attr('type', 'password');
    //        $icon.removeClass('fa-eye-slash').addClass('fa-eye');
    //        $icon.text('üëÅ'); // Emoji para ojo normal
    //    }
    //});

    // ‚ú® NUEVO: Definir objeto global AdminPasswordModal para acceso externo
    window.AdminPasswordModal = {
        show: function() {
            console.log('üîç DIAGN√ìSTICO: AdminPasswordModal.show() llamado');
            $('#adminPasswordModal').modal('show');
        },
        hide: function() {
            $('#adminPasswordModal').modal('hide');
        }
    };

    });
} else {
    console.error('jQuery no est√° disponible para _AdminPasswordModal. Por favor, verifique que jQuery est√© cargado antes de este script.');
}
</script>

