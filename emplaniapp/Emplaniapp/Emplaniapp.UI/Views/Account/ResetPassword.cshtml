@model Emplaniapp.UI.Models.ResetPasswordViewModel
@{
    ViewBag.Title = "Restablecer contraseña";
    Layout = "~/Views/Shared/_LoginLayout.cshtml";
}


<div class="sign-user_card bg-white">

    <!-- Header de la empresa -->
    <div>
        @*<img src="https://medismart.net/wp-content/uploads/2023/06/suplidora-royal.jpg" alt="Logo">*@
        <img src="~/Content/Images/Emplaniapp_Logo1.png" alt="logo">
    </div>

    <br /><br />
    <h3 class="">Reestrablecer Contraseña</h3>
    <p class="text-secondary mb-4">Cree una nueva contraseña para su cuenta</p>

    <!-- Form -->
    <div class="form-container">
        @using (Html.BeginForm("ResetPassword", "Account", FormMethod.Post, new { role = "form", id = "resetForm" }))
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true, "", new { @class = "validation-summary" })

            @Html.HiddenFor(m => m.UserId)
            @Html.HiddenFor(m => m.Code)

            <div class="row mb-3">
                <div class="col-lg-12">
                    <div class="form-group">
                        @Html.LabelFor(m => m.Password, "Nueva contraseña", new { @class = "form-label text-secondary" })
                        @Html.PasswordFor(m => m.Password, new
                        {
                            @class = "form-control",
                            @type = "password",
                            @style = "text-align: center;",
                            @placeholder = "Contraseña",
                            @autocomplete = "new-password",
                            id = "Password"
                        })
                        @Html.ValidationMessageFor(m => m.Password, "", new { @class = "advertencia" })
                    </div>
                </div>
            </div>
            <div class="row mb-3">
                <div class="col-lg-12">
                    <div class="form-group">
                        @Html.LabelFor(m => m.ConfirmPassword, "Confirmar contraseña", new { @class = "form-label text-secondary" })
                            @Html.PasswordFor(m => m.ConfirmPassword, new
                            {
                                @class = "form-control",
                                @type = "password",
                                @style = "text-align: center;",
                                @placeholder = "Contraseña",
                                @autocomplete = "new-password",
                                id = "ConfirmPassword"
                            })
                            @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "advertencia" })
                        </div>
                    </div>
                    </div>

                    <button type="submit" class="btn btn-primary" id="resetBtn">
                        Guardar contraseña
                    </button>
                    }
                </div>

                <div  class="mt-4 justify-content-center" style="text-size-adjust:auto;">
                    <a href="@Url.Action("Login","Account")">Iniciar Sesión</a>
                </div>

            </div>

            @section Scripts {
                @Scripts.Render("~/bundles/jqueryval")
                <script>
    $(function () {
                        // Toggles
                        $('#togglePassword1').on('click', function () {
                            var field = $('#Password');
                            var eye = $('#eyeIcon1');
                            if (field.attr('type') === 'password') {
                                field.attr('type', 'text'); eye.addClass('closed');
                            } else {
                                field.attr('type', 'password'); eye.removeClass('closed');
                            }
                        });

                        $('#togglePassword2').on('click', function () {
                            var field = $('#ConfirmPassword');
                            var eye = $('#eyeIcon2');
                            if (field.attr('type') === 'password') {
                                field.attr('type', 'text'); eye.addClass('closed');
                            } else {
                                field.attr('type', 'password'); eye.removeClass('closed');
                            }
                        });

                        // Loading
                        $('#resetForm').on('submit', function () {
                            var btn = $('#resetBtn');
                            btn.addClass('btn-loading').prop('disabled', true);
                            setTimeout(function () {
                                if ($('.field-validation-error:visible').length > 0 || $('.validation-summary:visible').length > 0) {
                                    btn.removeClass('btn-loading').prop('disabled', false);
                                }
                            }, 100);
                        });

                        // Focus effects
                        $('.form-input').on('focus', function () {
                            $(this).closest('.input-group').find('.input-label').css('color', '#4a87c7');
                        }).on('blur', function () {
                            $(this).closest('.input-group').find('.input-label').css('color', '#374151');
                        });

                        // Animación de entrada
                        setTimeout(function () {
                            $('.login-card').css({ 'animation': 'slideInUp .6s ease-out', 'opacity': '1' });
                        }, 100);

                        // Keyframes extra
                        $('<style>').text(`
                                @@keyframes slideInUp {
                                    from { transform: translateY(30px); opacity: 0; }
                                    to   { transform: translateY(0); opacity: 1; }
                                }
                                .login-card { opacity: 0; }
                            `).appendTo('head');
                    });</script>
            }
